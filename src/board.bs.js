// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as List from "bs-platform/lib/es6/list.js";
import * as $$Array from "bs-platform/lib/es6/array.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as React from "react";
import * as Caml_obj from "bs-platform/lib/es6/caml_obj.js";
import * as Caml_array from "bs-platform/lib/es6/caml_array.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as Square$YourProjectName from "./square.bs.js";

function calculate_winner(squares) {
  var lines_0 = [
    0,
    1,
    2
  ];
  var lines_1 = {
    hd: [
      3,
      4,
      5
    ],
    tl: {
      hd: [
        6,
        7,
        8
      ],
      tl: {
        hd: [
          0,
          3,
          6
        ],
        tl: {
          hd: [
            1,
            4,
            7
          ],
          tl: {
            hd: [
              2,
              5,
              8
            ],
            tl: {
              hd: [
                0,
                4,
                8
              ],
              tl: {
                hd: [
                  2,
                  4,
                  6
                ],
                tl: /* [] */0
              }
            }
          }
        }
      }
    }
  };
  var lines = {
    hd: lines_0,
    tl: lines_1
  };
  return List.fold_left((function (win, r) {
                if (win !== undefined) {
                  return Caml_option.some(Caml_option.valFromOption(win));
                }
                var p = Caml_array.caml_array_get(squares, Caml_array.caml_array_get(r, 0));
                var q = Caml_array.caml_array_get(squares, Caml_array.caml_array_get(r, 1));
                var r$1 = Caml_array.caml_array_get(squares, Caml_array.caml_array_get(r, 2));
                if (Caml_obj.caml_equal(p, q) && Caml_obj.caml_equal(p, r$1)) {
                  return p;
                }
                
              }), undefined, lines);
}

function Board(Props) {
  var match = React.useState(function () {
        return [
                Caml_array.caml_make_vect(9, undefined),
                true
              ];
      });
  var setSt = match[1];
  var match$1 = match[0];
  var x_is_next = match$1[1];
  var squares = match$1[0];
  var render_square = function (i) {
    return React.createElement(Square$YourProjectName.make, {
                value: Caml_array.caml_array_get(squares, i),
                onClick: (function (param) {
                    var match = calculate_winner(squares);
                    var match$1 = Caml_array.caml_array_get(squares, i);
                    if (match !== undefined) {
                      return ;
                    }
                    if (match$1 !== undefined) {
                      return ;
                    }
                    var squares$prime = $$Array.copy(squares);
                    var player = x_is_next ? "X" : "O";
                    Caml_array.caml_array_set(squares$prime, i, player);
                    return Curry._1(setSt, (function (param) {
                                  return [
                                          squares$prime,
                                          !x_is_next
                                        ];
                                }));
                  })
              });
  };
  var w = calculate_winner(squares);
  var statu_message = w !== undefined ? "Winner: " + w : "Next player: " + (
      x_is_next ? "X" : "O"
    );
  return React.createElement("div", undefined, React.createElement("div", {
                  className: "status"
                }, statu_message), React.createElement("div", {
                  className: "board-row"
                }, render_square(0), render_square(1), render_square(2)), React.createElement("div", {
                  className: "board-row"
                }, render_square(3), render_square(4), render_square(5)), React.createElement("div", {
                  className: "board-row"
                }, render_square(6), render_square(7), render_square(8)));
}

var make = Board;

export {
  calculate_winner ,
  make ,
  
}
/* react Not a pure module */
